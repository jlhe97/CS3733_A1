package jherreroestrada;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import heineman.FoundationMove;
import ks.common.model.Column;
import ks.common.model.Move;
import ks.common.view.ColumnView;
import ks.common.view.Container;
import ks.common.view.Widget;

/*
 * This controller is in charge of moving columns in the tableau to other columns.
 */
public class MountOlympusColumnController extends MouseAdapter {

	MountOlympus theGame;
	ColumnView columnView;

	public MountOlympusColumnController(MountOlympus mountOlympus, ColumnView columnView){
		this.theGame = mountOlympus;
		this.columnView = columnView;
	}

	/*
	 * This method allows the player to drag a card to and from a column
	 */
	public void mousePressed(MouseEvent me){
		Container c = theGame.getContainer();

		ColumnView cards = columnView.getColumnView(me);

		// Tell container which object is being dragged, and where in that widget the user clicked.
		c.setActiveDraggingObject (cards, me);

		// Tell container which BuildablePileView is the source for this drag event.
		c.setDragSource (columnView);

		// we simply redraw our source pile to avoid flicker,
		// rather than refreshing all widgets...
		columnView.redraw();
	}

	/*
	 * This method allows the columns to receive cards.
	 */
	public void mouseReleased(MouseEvent me) {
		Container c = theGame.getContainer();
		
		
		/** Return if there is no card being dragged chosen. */
		Widget w = c.getActiveDraggingObject();
		if (w == Container.getNothingBeingDragged()) {
			c.releaseDraggingObject();		
			return;
		}

		ColumnView cw = (ColumnView) w;

		/** Recover the from BuildablePile OR waste Pile */
		Widget fromWidget = c.getDragSource();
		if (fromWidget == null) {
			System.err.println ("ColumnController::mouseReleased(): somehow no dragSource in container.");
			c.releaseDraggingObject();
			return;
		}
		
		Column toColumn = (Column) columnView.getModelElement();
		Column col = (Column) cw.getModelElement();

		Move move = new TableauToTableauMove(src, dest);
		if (move.doMove(theGame)) {
			theGame.pushMove (move);     // Successful Move has been Move
		} else {
			fromWidget.returnWidget (draggingWidget);
		}

		// Tell container which object is being dragged, and where in that widget the user clicked.
		c.releaseDraggingObject();

		// we simply redraw our source pile to avoid flicker,
		// rather than refreshing all widgets...
		columnView.redraw();

		// done
		c.repaint();
	}
}


